@page "/drinklist"

@if(drinks is null)
{
	<Loading></Loading>
}
else
{
    <MudContainer>
        <MudAutocomplete T="string" Label="Search Drinks"
                     Variant="Variant.Outlined"
                     SearchFunc="TagSearch"
                     Class="px-2 py-2 mb-3"
                     ResetValueOnEmptyText="true"
                     CoerceText="true"
                     AdornmentIcon="@Icons.Material.Filled.Search" />
        <MudText>Drink List</MudText>
        <MudList>
            @foreach (DrinkDisplayModel drink in drinks)
            {
                <MudStack Row="true" Justify="Justify.SpaceBetween">
                    <MudLink @onclick="() => NavTo(drink.Name,drink.Id)">@drink.Name</MudLink>
                    <AuthorizeView Roles="Admin">
                        <MudButtonGroup Color="Color.Dark" Variant="Variant.Text">
                            <MudIconButton Icon="@Icons.Material.Filled.Delete" @onclick="() => DeleteDrink(drink.Id)" aria-label="delete"></MudIconButton>
                            <MudIconButton Icon="@Icons.Material.Filled.Edit" @onclick="() => EditDrink(drink.Name,drink.Id)" aria-label="edit"></MudIconButton>
                        </MudButtonGroup>
                    </AuthorizeView>
                </MudStack>
            }
        </MudList>

        <MudDataGrid T="DrinkDisplayModel" Items="@drinks" ReadOnly="true" 
            SortMode="SortMode.Multiple" QuickFilter="@QuickFilter"
            Striped="true"
            Dense="true">
            <ToolBarContent>
                <MudText Typo="Typo.h6">Drink List</MudText>
                <MudSpacer />
                <MudTextField @bind-Value="searchString" Placeholder="Search" Adornment="Adornment.Start" Immediate="true"
                          AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
            </ToolBarContent>
            <Columns>
                <PropertyColumn Property="d => d.Name" />
                <TemplateColumn T="DrinkDisplayModel">
                    <CellTemplate>
                        @foreach(var i in context.Item.Instructions)
                        {
                            <MudChip Value="@i">@i.Ingredient.Name</MudChip>
                        }
                    </CellTemplate>
                </TemplateColumn>

                <TemplateColumn T="DrinkDisplayModel" CellClass="d-flex justify-end">
                    <CellTemplate>
                        <MudButtonGroup Color="Color.Dark" Variant="Variant.Text">
                        <MudIconButton Size="@Size.Small" Icon="@Icons.Material.Filled.Delete" OnClick="@(() => this.DeleteDrink(context.Item.Id))" aria-label="delete"></MudIconButton>
                        <MudIconButton Size="@Size.Small" Icon="@Icons.Material.Filled.Edit" OnClick="@(() => this.EditDrink(context.Item.Name, context.Item.Id))" aria-label="edit"></MudIconButton>
                        </MudButtonGroup>
                    </CellTemplate>

                </TemplateColumn>

            </Columns>
            <PagerContent>
                <MudDataGridPager T="DrinkDisplayModel"></MudDataGridPager>

            </PagerContent>
        </MudDataGrid>
        
    </MudContainer>
    <AuthorizeView Roles="Admin">
        <MudContainer>
            <MudText>Drinks Deleted</MudText>
            <MudList>
                @foreach (DrinkDisplayModel drink in softdeldrinks)
                {
                    <MudStack Row="true" Justify="Justify.SpaceBetween">
                        <MudLink @onclick="() => NavTo(drink.Name,drink.Id)">@drink.Name</MudLink>

                        <MudButtonGroup Color="Color.Dark" Variant="Variant.Text">
                            <MudIconButton Icon="@Icons.Material.Filled.DeleteForever" @onclick="() => DeleteDrink(drink.Id)" aria-label="delete"></MudIconButton>
                            <MudIconButton Icon="@Icons.Material.Filled.RestoreFromTrash" @onclick="() => UndoDel(drink.Id)" aria-label="edit"></MudIconButton>
                        </MudButtonGroup>

                    </MudStack>
                }
            </MudList>
        </MudContainer>
    </AuthorizeView>
}
