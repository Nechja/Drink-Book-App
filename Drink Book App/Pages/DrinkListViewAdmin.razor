@page "/admintools/addmindrinklist"
@attribute [Authorize(Roles = "Admin")]

@if(drinks is null)
{
	<Loading></Loading>
}
else
{
    <MudContainer>
        <MudDataGrid T="DrinkDisplayModel" Items="@drinks" ReadOnly="true" 
            SortMode="SortMode.Multiple" QuickFilter="@QuickFilter"
            Striped="true"
            Dense="true">
            <ToolBarContent>
                <MudText Typo="Typo.h4">Drink List</MudText>
                <MudSpacer />
                <MudTextField @bind-Value="searchString" Placeholder="Search" Adornment="Adornment.Start" Immediate="true"
                          AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
            </ToolBarContent>
            <Columns>
                <PropertyColumn Property="d => d.Name" />
                <TemplateColumn T="DrinkDisplayModel" Title="Ingredients">
                    <CellTemplate>
                        <MudGrid>
                            @foreach (var i in context.Item.Instructions)
                            {
                                <MudChip Label="true" Value="@i">@i.Ingredient.Name</MudChip>
                            }
                        </MudGrid>
                    </CellTemplate>

                </TemplateColumn>
                <TemplateColumn T="DrinkDisplayModel" Title="Tags">
                    <CellTemplate>
                        <MudGrid>
                            @foreach (var i in context.Item.Tags)
                            {
                                <MudChip Label="true" Value="@i">@i.Value</MudChip>
                            }
                        </MudGrid>
                    </CellTemplate>

                </TemplateColumn>

                  <TemplateColumn T="DrinkDisplayModel" CellClass="d-flex justify-end">
                    <CellTemplate>
                        <MudButtonGroup Color="Color.Dark" Variant="Variant.Text">
                        <MudIconButton Size="@Size.Small" Icon="@Icons.Material.Filled.Delete" OnClick="@(() => this.DeleteDrink(context.Item.Id))" aria-label="delete"></MudIconButton>
                        <MudIconButton Size="@Size.Small" Icon="@Icons.Material.Filled.Edit" OnClick="@(() => this.EditDrink(context.Item.Name, context.Item.Id))" aria-label="edit"></MudIconButton>
                      
                    </MudButtonGroup>
                    </CellTemplate>

                </TemplateColumn>
            </Columns>
            <PagerContent>
                <MudDataGridPager T="DrinkDisplayModel"></MudDataGridPager>
            </PagerContent>

        </MudDataGrid>

    </MudContainer>
    <AuthorizeView Roles="Admin">
        <MudContainer>
            <MudText>Drinks Deleted</MudText>
            <MudList>
                @foreach (DrinkDisplayModel drink in softdeldrinks)
                {
                    <MudStack Row="true" Justify="Justify.SpaceBetween">
                        <MudLink @onclick="() => NavTo(drink.Name,drink.Id)">@drink.Name</MudLink>

                        <MudButtonGroup Color="Color.Dark" Variant="Variant.Text">
                            <MudIconButton Icon="@Icons.Material.Filled.DeleteForever" @onclick="() => DeleteDrink(drink.Id)" aria-label="delete"></MudIconButton>
                            <MudIconButton Icon="@Icons.Material.Filled.RestoreFromTrash" @onclick="() => UndoDel(drink.Id)" aria-label="edit"></MudIconButton>
                        </MudButtonGroup>

                    </MudStack>
                }
            </MudList>
        </MudContainer>
    </AuthorizeView>
}
